{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","components/Message/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","src","image","onClick","markIt","id","Wrapper","children","Title","Score","Message","App","state","giphys","marked","resultMessage","score","topScore","randomize","array","i","length","j","Math","floor","random","setState","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"izCAgBeA,MAbf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAI,oBAAoBC,IAAKH,EAAMI,SAE1C,yBAAKC,QAAS,kBAAML,EAAMM,OAAON,EAAMO,KAAKN,UAAU,SAAtD,Y,MCFSO,MAJf,SAAiBR,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,W,MCG1BC,MAJf,SAAeV,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMS,W,aCGvBE,MAJf,SAAeX,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMS,W,MCGvBG,MAJf,SAAiBZ,GACf,OAAO,wBAAIC,UAAU,WAAWD,EAAMS,WC6FzBI,E,2MAtFbC,MAAQ,CACNC,SAEAC,OAAS,EACTC,cAAe,iCACfC,MAAQ,EACRC,SAAU,G,EASdC,UAAY,SAAAC,GACV,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADC,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,G,EAIPf,OAAS,SAAAC,GAOC,EAAKO,MAAME,OAAST,IAAO,GAE7B,EAAKqB,SAAS,CACdZ,OAAS,EACTE,MAAQ,EACRD,cAAe,8DAAgEF,EAAOQ,OAAS,MAEjG,EAAKH,UAAU,EAAKN,MAAMC,UAMrB,EAAKD,MAAMI,QAAU,EAAKJ,MAAMK,UACnC,EAAKS,SAAS,CACZT,SAAU,EAAKL,MAAMI,MAAQ,IAIjC,EAAKU,SAAS,CAEZZ,OAAQ,EAAKF,MAAME,OAAST,EAE5BW,MAAO,EAAKJ,MAAMI,MAAQ,EAE1BD,cAAe,sBAIjB,EAAKG,UAAU,EAAKN,MAAMC,U,mFAjDhCc,KAAKD,SAAS,CAACb,OAAQc,KAAKT,UAAUS,KAAKf,MAAMC,Y,+BAuDvC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,wBACA,kBAAC,EAAD,KAAUc,KAAKf,MAAMG,eACrB,kBAAC,EAAD,kDACA,kBAAC,EAAD,qBAAqBY,KAAKf,MAAMI,MAAhC,2BAA0DW,KAAKf,MAAMK,UACpEU,KAAKf,MAAMC,OAAOe,KAAI,SAAAC,GAAM,OAC3B,kBAAC,EAAD,CACEzB,OAAQ,EAAKA,OACbC,GAAIwB,EAAOxB,GACXyB,IAAKD,EAAOxB,GACZH,MAAO2B,EAAO3B,gB,GAjFR6B,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1aa4d9f8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt=\"giphy gif sticker\" src={props.image} />\n      </div>\n      <div onClick={() => props.markIt(props.id)} className=\"guess\">\n      ⬚\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return <h2 className=\"score\">{props.children}</h2>;\n}\n\nexport default Score;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Message(props) {\n  return <h3 className=\"message\">{props.children}</h3>;\n}\n\nexport default Message;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport giphys from \"./giphys.json\";\nimport Score from \"./components/Score\";\nimport Message from \"./components/Message\";\n\nclass App extends Component {\n  // Setting this.state.giphys to the giphys json array\n  //same as giphys : giphys\n  state = {\n    giphys,\n    //set 'marked' equal to a unique prime number.\n    marked : 2,\n    resultMessage: \"Pick any character to start...\",\n    score : 0,\n    topScore: 0\n  };\n\n//once compenenet is loaded, randomize the order of the memory tiles!\ncomponentDidMount(){\n  this.setState({giphys: this.randomize(this.state.giphys)});\n}\n\n//randomize an array to shuffle the order of the cards.\nrandomize = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n    //On each click of a card...\n  markIt = id => {\n\n      \n      //All card ids are unique prime numbers.\n      \n      //divide the marked state by the id. if the remainder is 0, it's a number/id that has already been used.\n         // you chose a card that you chose already - GAME OVER\n        if (this.state.marked % id === 0) {\n    //       //reset the marked array to an empty array, set score to 0\n          this.setState({\n          marked : 2, \n          score : 0, \n          resultMessage: \"You picked that one already! \\nCan you make all the way to \" + giphys.length + \"?\"})\n    //     //Shuffle the cards and re-render\n        this.randomize(this.state.giphys);  \n\n    //     //otherwise, you must have chosen a new character\n      } else {\n\n         //increment top score if necessary\n         if (this.state.score === this.state.topScore) {\n          this.setState({\n            topScore: this.state.score + 1\n          })\n        }       \n        //You guessed right! Game on, my friend. \n        this.setState({\n    //     //store the id of the character you chose in the marked array\n          marked: this.state.marked * id,\n    //       //increment your score\n          score: this.state.score + 1,\n    //       //display positive message\n          resultMessage: \"You picked right!\"\n        })\n\n    //     //Shuffle the cards and re-render\n        this.randomize(this.state.giphys);  \n\n    }\n  };\n\n \n  render() {\n    return (\n      <Wrapper>\n        <Title>'Member Giphys!</Title>\n        <Message>{this.state.resultMessage}</Message>\n        <Message>Just don't pick the same character twice.</Message>\n        <Score>'Memberized: {this.state.score}  ▩  Bestest Ever: {this.state.topScore}</Score>\n        {this.state.giphys.map(friend => (\n          <FriendCard\n            markIt={this.markIt}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}